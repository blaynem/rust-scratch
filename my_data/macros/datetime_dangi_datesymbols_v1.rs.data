// @generated
# [doc = " Implement `DataProvider<DangiDateSymbolsV1Marker>` on the given struct using the data"] # [doc = r" hardcoded in this file. This allows the struct to be used with"] # [doc = r" `icu`'s `_unstable` constructors."] # [doc (hidden)] # [macro_export] macro_rules ! __impl_datetime_dangi_datesymbols_v1 { ($ provider : ty) => { # [clippy :: msrv = "1.67"] const _ : () = < $ provider > :: MUST_USE_MAKE_PROVIDER_MACRO ; # [clippy :: msrv = "1.67"] impl icu_provider :: DataProvider < icu::datetime :: provider :: calendar :: DangiDateSymbolsV1Marker > for $ provider { fn load (& self , req : icu_provider :: DataRequest ,) -> Result < icu_provider :: DataResponse < icu::datetime :: provider :: calendar :: DangiDateSymbolsV1Marker > , icu_provider :: DataError > { static UND : < icu::datetime :: provider :: calendar :: DangiDateSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu::datetime :: provider :: calendar :: DateSymbolsV1 { months : icu::datetime :: provider :: calendar :: months :: ContextsV1 { format : icu::datetime :: provider :: calendar :: months :: FormatWidthsV1 { abbreviated : icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("M01") , alloc :: borrow :: Cow :: Borrowed ("M02") , alloc :: borrow :: Cow :: Borrowed ("M03") , alloc :: borrow :: Cow :: Borrowed ("M04") , alloc :: borrow :: Cow :: Borrowed ("M05") , alloc :: borrow :: Cow :: Borrowed ("M06") , alloc :: borrow :: Cow :: Borrowed ("M07") , alloc :: borrow :: Cow :: Borrowed ("M08") , alloc :: borrow :: Cow :: Borrowed ("M09") , alloc :: borrow :: Cow :: Borrowed ("M10") , alloc :: borrow :: Cow :: Borrowed ("M11") , alloc :: borrow :: Cow :: Borrowed ("M12")] ,) , narrow : icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("1") , alloc :: borrow :: Cow :: Borrowed ("2") , alloc :: borrow :: Cow :: Borrowed ("3") , alloc :: borrow :: Cow :: Borrowed ("4") , alloc :: borrow :: Cow :: Borrowed ("5") , alloc :: borrow :: Cow :: Borrowed ("6") , alloc :: borrow :: Cow :: Borrowed ("7") , alloc :: borrow :: Cow :: Borrowed ("8") , alloc :: borrow :: Cow :: Borrowed ("9") , alloc :: borrow :: Cow :: Borrowed ("10") , alloc :: borrow :: Cow :: Borrowed ("11") , alloc :: borrow :: Cow :: Borrowed ("12")] ,) , short : None , wide : icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("M01") , alloc :: borrow :: Cow :: Borrowed ("M02") , alloc :: borrow :: Cow :: Borrowed ("M03") , alloc :: borrow :: Cow :: Borrowed ("M04") , alloc :: borrow :: Cow :: Borrowed ("M05") , alloc :: borrow :: Cow :: Borrowed ("M06") , alloc :: borrow :: Cow :: Borrowed ("M07") , alloc :: borrow :: Cow :: Borrowed ("M08") , alloc :: borrow :: Cow :: Borrowed ("M09") , alloc :: borrow :: Cow :: Borrowed ("M10") , alloc :: borrow :: Cow :: Borrowed ("M11") , alloc :: borrow :: Cow :: Borrowed ("M12")] ,) , } , stand_alone : None , } , weekdays : icu::datetime :: provider :: calendar :: weekdays :: ContextsV1 { format : icu::datetime :: provider :: calendar :: weekdays :: FormatWidthsV1 { abbreviated : icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("Sun") , alloc :: borrow :: Cow :: Borrowed ("Mon") , alloc :: borrow :: Cow :: Borrowed ("Tue") , alloc :: borrow :: Cow :: Borrowed ("Wed") , alloc :: borrow :: Cow :: Borrowed ("Thu") , alloc :: borrow :: Cow :: Borrowed ("Fri") , alloc :: borrow :: Cow :: Borrowed ("Sat")] ,) , narrow : icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("S") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("T") , alloc :: borrow :: Cow :: Borrowed ("W") , alloc :: borrow :: Cow :: Borrowed ("T") , alloc :: borrow :: Cow :: Borrowed ("F") , alloc :: borrow :: Cow :: Borrowed ("S")] ,) , short : Some (icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("Sun") , alloc :: borrow :: Cow :: Borrowed ("Mon") , alloc :: borrow :: Cow :: Borrowed ("Tue") , alloc :: borrow :: Cow :: Borrowed ("Wed") , alloc :: borrow :: Cow :: Borrowed ("Thu") , alloc :: borrow :: Cow :: Borrowed ("Fri") , alloc :: borrow :: Cow :: Borrowed ("Sat")] ,)) , wide : icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("Sun") , alloc :: borrow :: Cow :: Borrowed ("Mon") , alloc :: borrow :: Cow :: Borrowed ("Tue") , alloc :: borrow :: Cow :: Borrowed ("Wed") , alloc :: borrow :: Cow :: Borrowed ("Thu") , alloc :: borrow :: Cow :: Borrowed ("Fri") , alloc :: borrow :: Cow :: Borrowed ("Sat")] ,) , } , stand_alone : None , } , eras : icu::datetime :: provider :: calendar :: Eras { names : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (zerovec :: VarZeroVec :: new () , zerovec :: VarZeroVec :: new ()) } , abbr : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (zerovec :: VarZeroVec :: new () , zerovec :: VarZeroVec :: new ()) } , narrow : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (zerovec :: VarZeroVec :: new () , zerovec :: VarZeroVec :: new ()) } , } , } ; static JA : < icu::datetime :: provider :: calendar :: DangiDateSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable = icu::datetime :: provider :: calendar :: DateSymbolsV1 { months : icu::datetime :: provider :: calendar :: months :: ContextsV1 { format : icu::datetime :: provider :: calendar :: months :: FormatWidthsV1 { abbreviated : icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("正月") , alloc :: borrow :: Cow :: Borrowed ("二月") , alloc :: borrow :: Cow :: Borrowed ("三月") , alloc :: borrow :: Cow :: Borrowed ("四月") , alloc :: borrow :: Cow :: Borrowed ("五月") , alloc :: borrow :: Cow :: Borrowed ("六月") , alloc :: borrow :: Cow :: Borrowed ("七月") , alloc :: borrow :: Cow :: Borrowed ("八月") , alloc :: borrow :: Cow :: Borrowed ("九月") , alloc :: borrow :: Cow :: Borrowed ("十月") , alloc :: borrow :: Cow :: Borrowed ("十一月") , alloc :: borrow :: Cow :: Borrowed ("十二月")] ,) , narrow : icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("正") , alloc :: borrow :: Cow :: Borrowed ("二") , alloc :: borrow :: Cow :: Borrowed ("三") , alloc :: borrow :: Cow :: Borrowed ("四") , alloc :: borrow :: Cow :: Borrowed ("五") , alloc :: borrow :: Cow :: Borrowed ("六") , alloc :: borrow :: Cow :: Borrowed ("七") , alloc :: borrow :: Cow :: Borrowed ("八") , alloc :: borrow :: Cow :: Borrowed ("九") , alloc :: borrow :: Cow :: Borrowed ("十") , alloc :: borrow :: Cow :: Borrowed ("十一") , alloc :: borrow :: Cow :: Borrowed ("十二")] ,) , short : None , wide : icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("正月") , alloc :: borrow :: Cow :: Borrowed ("二月") , alloc :: borrow :: Cow :: Borrowed ("三月") , alloc :: borrow :: Cow :: Borrowed ("四月") , alloc :: borrow :: Cow :: Borrowed ("五月") , alloc :: borrow :: Cow :: Borrowed ("六月") , alloc :: borrow :: Cow :: Borrowed ("七月") , alloc :: borrow :: Cow :: Borrowed ("八月") , alloc :: borrow :: Cow :: Borrowed ("九月") , alloc :: borrow :: Cow :: Borrowed ("十月") , alloc :: borrow :: Cow :: Borrowed ("十一月") , alloc :: borrow :: Cow :: Borrowed ("十二月")] ,) , } , stand_alone : None , } , weekdays : icu::datetime :: provider :: calendar :: weekdays :: ContextsV1 { format : icu::datetime :: provider :: calendar :: weekdays :: FormatWidthsV1 { abbreviated : icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("日") , alloc :: borrow :: Cow :: Borrowed ("月") , alloc :: borrow :: Cow :: Borrowed ("火") , alloc :: borrow :: Cow :: Borrowed ("水") , alloc :: borrow :: Cow :: Borrowed ("木") , alloc :: borrow :: Cow :: Borrowed ("金") , alloc :: borrow :: Cow :: Borrowed ("土")] ,) , narrow : icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("日") , alloc :: borrow :: Cow :: Borrowed ("月") , alloc :: borrow :: Cow :: Borrowed ("火") , alloc :: borrow :: Cow :: Borrowed ("水") , alloc :: borrow :: Cow :: Borrowed ("木") , alloc :: borrow :: Cow :: Borrowed ("金") , alloc :: borrow :: Cow :: Borrowed ("土")] ,) , short : Some (icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("日") , alloc :: borrow :: Cow :: Borrowed ("月") , alloc :: borrow :: Cow :: Borrowed ("火") , alloc :: borrow :: Cow :: Borrowed ("水") , alloc :: borrow :: Cow :: Borrowed ("木") , alloc :: borrow :: Cow :: Borrowed ("金") , alloc :: borrow :: Cow :: Borrowed ("土")] ,)) , wide : icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("日曜日") , alloc :: borrow :: Cow :: Borrowed ("月曜日") , alloc :: borrow :: Cow :: Borrowed ("火曜日") , alloc :: borrow :: Cow :: Borrowed ("水曜日") , alloc :: borrow :: Cow :: Borrowed ("木曜日") , alloc :: borrow :: Cow :: Borrowed ("金曜日") , alloc :: borrow :: Cow :: Borrowed ("土曜日")] ,) , } , stand_alone : None , } , eras : icu::datetime :: provider :: calendar :: Eras { names : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (zerovec :: VarZeroVec :: new () , zerovec :: VarZeroVec :: new ()) } , abbr : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (zerovec :: VarZeroVec :: new () , zerovec :: VarZeroVec :: new ()) } , narrow : unsafe { # [allow (unused_unsafe)] zerovec :: ZeroMap :: from_parts_unchecked (zerovec :: VarZeroVec :: new () , zerovec :: VarZeroVec :: new ()) } , } , } ; static VALUES : [& < icu::datetime :: provider :: calendar :: DangiDateSymbolsV1Marker as icu_provider :: DataMarker > :: Yokeable ; 2usize] = [& JA , & UND] ; static KEYS : [& str ; 2usize] = ["ja" , "und"] ; if let Ok (payload) = KEYS . binary_search_by (| k | req . locale . strict_cmp (k . as_bytes ()) . reverse ()) . map (| i | * unsafe { VALUES . get_unchecked (i) }) { Ok (icu_provider :: DataResponse { payload : Some (icu_provider :: DataPayload :: from_static_ref (payload)) , metadata : Default :: default () , }) } else { Err (icu_provider :: DataErrorKind :: MissingLocale . with_req (< icu::datetime :: provider :: calendar :: DangiDateSymbolsV1Marker as icu_provider :: KeyedDataMarker > :: KEY , req)) } } } } }